{
  parserClass="com.cwlplugin.parser.CwlParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Cwl"
  psiImplClassSuffix="Impl"
  psiPackage="com.cwlplugin.psi"
  psiImplPackage="com.cwlplugin.psi.impl"

  elementTypeHolderClass="com.cwlplugin.psi.CwlTypes"
  elementTypeClass="com.cwlplugin.psi.CwlElementType"
  tokenTypeClass="com.cwlplugin.psi.CwlTokenType"

  // These tokens are just for Interactive Preview
  tokens = [
  CWL_VERSION = "cwlVersion"
  VERSION = "v1.0"
  REQUIREMENTS = "requirements"
  CLASS = "class"
  INPUTS = "inputs"
  OUTPUTS = "outputs"
  COLON = ":"
  space="regexp:\s+"
  BASECOMMAND = "baseCommand"
//  COMMAND = "regexp:\w*"
  COMMAND = "ls"
  IDENTIFIER = "input_file"
//  IDENTIFIER = "regexp:([\w]*)"
  LABEL = "label"
  TYPE = "type"
  SECONDARY_FILES = "secondaryFiles"
  DOC = "doc"
  FORMAT = "format"
  STREAMABLE = "streamable"
  INPUT_BINDING = "inputBinding"
  DEFAULT = "default"
//  STRING = "regexp:(\s\|[\n\r]\w)"
  STRING = "some_string"
  LOAD_CONTENTS = "loadContents"
  POSITION = "position"
  PREFIX = "prefix"
  SEPARATE = "separate"
  ITEM_SEPARATOR = "itemSeparator"
  VALUE_FROM = "valueFrom"
  SHELL_QUOTE = "shellQuote"
  INT = "regexp:\d+"
  BOOLEAN = "True"
  EXPRESSION = "$()"
  STRING_TYPE = "string"
  COMMAND_LINE_TOOL = "CommandLineTool"
  ANY = "*"
  ID = "id"
  ]

//  psiImplUtilClass="com.cwlplugin.psi.impl.CwlPsiImplUtil"
}

cwl_file ::= !<<eof>> cwl_version tool_description

private cwl_version ::= CWL_VERSION COLON VERSION

tool_description ::= CLASS COLON tool
tool ::= (commandline_tool | expression_tool | workflow)

commandline_tool ::=
    (COMMAND_LINE_TOOL
    BASECOMMAND COLON COMMAND
    inputs
    outputs
    )

inputs ::= INPUTS COLON input_parameter *

input_parameter ::= IDENTIFIER COLON parameter_field *
parameter_field ::= ( default| doc | format | id | input_binding | label | secondary_files | streamable | type )

default ::= DEFAULT COLON ANY
doc ::= DOC COLON STRING
format ::= FORMAT COLON STRING
id ::= ID COLON STRING

input_binding ::= INPUT_BINDING COLON input_binding_parameter *
input_binding_parameter ::=
(
LOAD_CONTENTS COLON BOOLEAN
| VALUE_FROM COLON STRING
| POSITION COLON INT
| SEPARATE COLON STRING
| ITEM_SEPARATOR COLON STRING
| PREFIX COLON STRING
| SHELL_QUOTE COLON BOOLEAN
)

label ::= LABEL COLON STRING
secondary_files ::= SECONDARY_FILES COLON STRING
streamable ::= STREAMABLE COLON BOOLEAN
type ::= TYPE COLON STRING_TYPE

outputs ::= OUTPUTS COLON "[" "]"

//private item ::= INPUTS COLON IDENTIFIER {pin=2 recoverWhile=rule_recover}

//property ::= (KEY? SEPARATOR VALUE?) | KEY {methods=[getKey getValue]}


// TODO add expression_tool and workflow
expression_tool ::= ""
workflow ::=""